{
    "openapi": "3.0.1",
    "info": {
      "title": "CYCLE1",
      "version": "1.0"
    },
    "paths": {
      "/api/Auth/register": {
        "post": {
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegisterDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegisterDto"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegisterDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/api/Auth/login": {
        "post": {
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginDto"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/api/Customers": {
        "get": {
          "tags": [
            "Customers"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Customers"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Customer"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Customer"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        }
      },
      "/api/Customers/{id}": {
        "get": {
          "tags": [
            "Customers"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Customer"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Customer"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Customers"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "delete": {
          "tags": [
            "Customers"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/api/Cycles": {
        "get": {
          "tags": [
            "Cycles"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Cycle"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Cycle"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Cycle"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Cycles"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CycleCreateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CycleCreateDto"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CycleCreateDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Cycle"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Cycle"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Cycle"
                  }
                }
              }
            }
          }
        }
      },
      "/api/Cycles/{id}": {
        "get": {
          "tags": [
            "Cycles"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Cycle"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Cycle"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Cycle"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Cycles"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CycleUpdateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CycleUpdateDto"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CycleUpdateDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "delete": {
          "tags": [
            "Cycles"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/api/Orders": {
        "get": {
          "tags": [
            "Orders"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Orders"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderCreateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderCreateDto"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderCreateDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          }
        }
      },
      "/api/Orders/{id}": {
        "get": {
          "tags": [
            "Orders"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Orders"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/api/Orders/{id}/status": {
        "put": {
          "tags": [
            "Orders"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderStatusUpdateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderStatusUpdateDto"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderStatusUpdateDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/api/Orders/customer/{customerId}": {
        "get": {
          "tags": [
            "Orders"
          ],
          "parameters": [
            {
              "name": "customerId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/WeatherForecast": {
        "get": {
          "tags": [
            "WeatherForecast"
          ],
          "operationId": "GetWeatherForecast",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/WeatherForecast"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/WeatherForecast"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/WeatherForecast"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Customer": {
          "required": [
            "firstName",
            "lastName"
          ],
          "type": "object",
          "properties": {
            "customerId": {
              "type": "integer",
              "format": "int32"
            },
            "firstName": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "lastName": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "email": {
              "maxLength": 100,
              "minLength": 0,
              "type": "string",
              "format": "email",
              "nullable": true
            },
            "phone": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string",
              "format": "tel",
              "nullable": true
            },
            "address": {
              "maxLength": 200,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "additionalProperties": false
        },
        "Cycle": {
          "required": [
            "modelName"
          ],
          "type": "object",
          "properties": {
            "cycleId": {
              "type": "integer",
              "format": "int32"
            },
            "modelName": {
              "maxLength": 100,
              "minLength": 0,
              "type": "string"
            },
            "brandId": {
              "type": "integer",
              "format": "int32"
            },
            "brand": {
              "$ref": "#/components/schemas/CycleBrand"
            },
            "typeId": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/CycleType"
            },
            "description": {
              "maxLength": 1000,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "price": {
              "minimum": 0,
              "type": "number",
              "format": "double"
            },
            "stockQuantity": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CycleBrand": {
          "required": [
            "brandName"
          ],
          "type": "object",
          "properties": {
            "brandId": {
              "type": "integer",
              "format": "int32"
            },
            "brandName": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "description": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CycleCreateDto": {
          "required": [
            "brandId",
            "modelName",
            "typeId"
          ],
          "type": "object",
          "properties": {
            "modelName": {
              "maxLength": 100,
              "minLength": 0,
              "type": "string"
            },
            "brandId": {
              "type": "integer",
              "format": "int32"
            },
            "typeId": {
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "maxLength": 1000,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "price": {
              "minimum": 0,
              "type": "number",
              "format": "double"
            },
            "stockQuantity": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CycleType": {
          "required": [
            "typeName"
          ],
          "type": "object",
          "properties": {
            "typeId": {
              "type": "integer",
              "format": "int32"
            },
            "typeName": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "description": {
              "maxLength": 500,
              "minLength": 0,
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CycleUpdateDto": {
          "required": [
            "brandId",
            "modelName",
            "typeId"
          ],
          "type": "object",
          "properties": {
            "cycleId": {
              "type": "integer",
              "format": "int32"
            },
            "modelName": {
              "maxLength": 100,
              "minLength": 0,
              "type": "string"
            },
            "brandId": {
              "type": "integer",
              "format": "int32"
            },
            "typeId": {
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "maxLength": 1000,
              "minLength": 0,
              "type": "string",
              "nullable": true
            },
            "price": {
              "minimum": 0,
              "type": "number",
              "format": "double"
            },
            "stockQuantity": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Order": {
          "required": [
            "status"
          ],
          "type": "object",
          "properties": {
            "orderId": {
              "type": "integer",
              "format": "int32"
            },
            "customerId": {
              "type": "integer",
              "format": "int32"
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "status": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string"
            },
            "totalAmount": {
              "minimum": 0,
              "type": "number",
              "format": "double"
            },
            "orderDate": {
              "type": "string",
              "format": "date-time"
            },
            "customer": {
              "$ref": "#/components/schemas/Customer"
            },
            "user": {
              "$ref": "#/components/schemas/User"
            }
          },
          "additionalProperties": false
        },
        "OrderCreateDto": {
          "type": "object",
          "properties": {
            "customerId": {
              "type": "integer",
              "format": "int32"
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OrderItemDto"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "OrderItemDto": {
          "type": "object",
          "properties": {
            "cycleId": {
              "type": "integer",
              "format": "int32"
            },
            "quantity": {
              "type": "integer",
              "format": "int32"
            },
            "unitPrice": {
              "type": "number",
              "format": "double"
            }
          },
          "additionalProperties": false
        },
        "OrderStatusUpdateDto": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "User": {
          "required": [
            "email",
            "role",
            "username"
          ],
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "username": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "passwordHash": {
              "type": "string",
              "format": "byte",
              "nullable": true
            },
            "passwordSalt": {
              "type": "string",
              "format": "byte",
              "nullable": true
            },
            "email": {
              "maxLength": 100,
              "minLength": 0,
              "type": "string",
              "format": "email"
            },
            "role": {
              "maxLength": 20,
              "minLength": 0,
              "type": "string"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "additionalProperties": false
        },
        "UserLoginDto": {
          "required": [
            "password",
            "username"
          ],
          "type": "object",
          "properties": {
            "username": {
              "minLength": 1,
              "type": "string"
            },
            "password": {
              "minLength": 1,
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "UserRegisterDto": {
          "required": [
            "email",
            "password",
            "role",
            "username"
          ],
          "type": "object",
          "properties": {
            "username": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "email": {
              "minLength": 1,
              "type": "string",
              "format": "email"
            },
            "password": {
              "maxLength": 20,
              "minLength": 6,
              "type": "string"
            },
            "role": {
              "minLength": 1,
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "WeatherForecast": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "format": "date"
            },
            "temperatureC": {
              "type": "integer",
              "format": "int32"
            },
            "temperatureF": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "summary": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        }
      },
      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "description": "Enter 'Bearer <your-token>' in the text box below.",
          "scheme": "Bearer",
          "bearerFormat": "JWT"
        }
      }
    },
    "security": [
      {
        "Bearer": [ ]
      }
    ]
  }